// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define('components/wizard', ['knockout'], function(ko) {
    var Wizard;
    return Wizard = (function() {
      function Wizard() {
        this.back = __bind(this.back, this);
        this.forward = __bind(this.forward, this);
        this.activate = __bind(this.activate, this);
        this.composeOptions = ko.observable({
          model: '',
          activationData: {
            wizard: this,
            activationData: null
          }
        });
      }

      Wizard.prototype.activate = function(options) {
        this.dialog = options.dialog;
        return this.composeOptions({
          model: options.model,
          activationData: {
            dialog: this.dialog,
            wizard: this,
            activationData: options.activationData
          }
        });
      };

      Wizard.prototype.forward = function(options) {
        return (function(_this) {
          return function() {
            return _this.composeOptions({
              model: options.model,
              transition: 'forward',
              activationData: {
                dialog: _this.dialog,
                wizard: _this,
                activationData: options.activationData
              }
            });
          };
        })(this);
      };

      Wizard.prototype.back = function(options) {
        return (function(_this) {
          return function() {
            return _this.composeOptions({
              model: options.model,
              transition: 'back',
              activationData: {
                dialog: _this.dialog,
                wizard: _this,
                activationData: options.activationData
              }
            });
          };
        })(this);
      };

      return Wizard;

    })();
  });

}).call(this);
